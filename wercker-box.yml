name: golang
version: 1.7.1
inherits: wercker/ubuntu12.04-webessentials@1.0.4
type : main
platform : ubuntu@12.04
description : golang
keywords:
  - golang
  - go
  - glide
packages :
  - golang@1.7.1
  - git
  - mercurial
  - bzr
  - glide@v0.12.1
script : |
  version="1.7.1"
  glideversion="v0.12.1"

  sudo apt-get update
  sudo apt-get install bzr
  sudo apt-get install mercurial

  wget https://storage.googleapis.com/golang/go${version}.linux-amd64.tar.gz
  sudo tar -C /usr/local -xzf go${version}.linux-amd64.tar.gz
  rm go${version}.linux-amd64.tar.gz

  # Set GOPATH
  export GOPATH="$HOME/go"
  echo "export GOPATH=$HOME/go" | sudo tee -a /etc/profile

  # Adds go bin directory to path so tools
  # and buils are available on the commandline
  export PATH="$PATH:$GOPATH/bin"

  # Make actual go workspace dir structure
  mkdir -p "$HOME/go/{src,pkg,bin}"

  # Install glide
  wget https://github.com/Masterminds/glide/releases/download/${glideversion}/glide-${glideversion}-linux-amd64.tar.gz
  sudo tar -C /usr/local -xzf glide-${glideversion}-linux-amd64.tar.gz
  sudo mv /usr/local/linux-amd64 /usr/local/glide
  rm glide-${glideversion}-linux-amd64.tar.gz

  # add all bin dirs to path
  echo "export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin:/usr/local/glide" | sudo tee -a /etc/profile

box-detect:
  priority : 900
  version :
  detect:
    - files:
      - .godir
    - files:
      - main.go
    - files:
      - app.go
    - files:
      - server.go
    - partOfFiles:
      - ".go"

default-build:
  go:
    priority : 50
    detect:
      - default: true
    text-to-append: |
      # Build definition
      build:
        # The steps that will be executed on build
        steps:
          # Sets the go workspace and places you package
          # at the right place in the workspace tree
          - setup-go-workspace

          # Gets the dependencies
          - script:
              name: go get
              code: |
                cd $WERCKER_SOURCE_DIR
                go version
                go get -t ./...

          # Build the project
          - script:
              name: go build
              code: |
                go build ./...

          # Test the project
          - script:
              name: go test
              code: |
                go test ./...
